// Generated by view binder compiler. Do not edit!
package in.csias.tcclient.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import in.csias.tcclient.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView counterDownTv;

  @NonNull
  public final Button resendBtn;

  @NonNull
  public final EditText sentCodeEt;

  @NonNull
  public final TextView verfiyTv;

  @NonNull
  public final Button verificationBtn;

  @NonNull
  public final TextView waitingTv;

  @NonNull
  public final TextView wrongTv;

  private ActivityLoginBinding(@NonNull ScrollView rootView, @NonNull TextView counterDownTv,
      @NonNull Button resendBtn, @NonNull EditText sentCodeEt, @NonNull TextView verfiyTv,
      @NonNull Button verificationBtn, @NonNull TextView waitingTv, @NonNull TextView wrongTv) {
    this.rootView = rootView;
    this.counterDownTv = counterDownTv;
    this.resendBtn = resendBtn;
    this.sentCodeEt = sentCodeEt;
    this.verfiyTv = verfiyTv;
    this.verificationBtn = verificationBtn;
    this.waitingTv = waitingTv;
    this.wrongTv = wrongTv;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.counter_downTv;
      TextView counterDownTv = ViewBindings.findChildViewById(rootView, id);
      if (counterDownTv == null) {
        break missingId;
      }

      id = R.id.resend_btn;
      Button resendBtn = ViewBindings.findChildViewById(rootView, id);
      if (resendBtn == null) {
        break missingId;
      }

      id = R.id.sent_codeEt;
      EditText sentCodeEt = ViewBindings.findChildViewById(rootView, id);
      if (sentCodeEt == null) {
        break missingId;
      }

      id = R.id.verfiy_Tv;
      TextView verfiyTv = ViewBindings.findChildViewById(rootView, id);
      if (verfiyTv == null) {
        break missingId;
      }

      id = R.id.verification_btn;
      Button verificationBtn = ViewBindings.findChildViewById(rootView, id);
      if (verificationBtn == null) {
        break missingId;
      }

      id = R.id.waiting_tv;
      TextView waitingTv = ViewBindings.findChildViewById(rootView, id);
      if (waitingTv == null) {
        break missingId;
      }

      id = R.id.wrong_tv;
      TextView wrongTv = ViewBindings.findChildViewById(rootView, id);
      if (wrongTv == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ScrollView) rootView, counterDownTv, resendBtn, sentCodeEt,
          verfiyTv, verificationBtn, waitingTv, wrongTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
